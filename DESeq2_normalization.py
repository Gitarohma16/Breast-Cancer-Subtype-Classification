# -*- coding: utf-8 -*-
"""User Guide Normalisasi Data (DESeq2).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZVnppCqejCurh03Gbgj9BEh6FqIeD886
"""

!pip install pandas==1.5.3

!pip install --upgrade rpy2

import rpy2.robjects.packages as rpackages

# Install BiocManager
utils = rpackages.importr('utils')
utils.chooseCRANmirror(ind=1)
if not rpackages.isinstalled("BiocManager"):
    utils.install_packages("BiocManager")

# Install DESeq2 via BiocManager
biocmanager = rpackages.importr("BiocManager")
biocmanager.install("DESeq2")

import rpy2.robjects as ro
from rpy2.robjects import pandas2ri
import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

count_data= pd.read_csv("/content/drive/MyDrive/Data_TA/Dataset/RNA_cleaned.csv", index_col=0)
col_data= pd.read_excel("/content/drive/MyDrive/Data_TA/Dataset/Subtype1.xlsx", index_col=0)

count_data.head()

col_data.head()

"""#Normalization and Differential Expression Analysis"""

with ro.pandas2ri.converter.context():
    # Convert pandas DataFrame to R format using rpy2
    r_count_data = ro.pandas2ri.py2rpy(count_data)
    r_col_data = ro.pandas2ri.py2rpy(col_data)

    # Running DESeq2 in R via rpy2
    ro.r('''
        library(DESeq2)

        # count_data <- as.data.frame(count_data)
        # rownames(count_data) <- count_data$Hugo_Symbol

        dds <- DESeqDataSetFromMatrix(countData = round(%s), colData = %s, design = ~ Subtype)
        dds <- DESeq(dds)
        res <- results(dds)

        res_data <- as.data.frame(res)
        normalized_counts <- counts(dds, normalized = TRUE)

        normalized_counts_df <- as.data.frame(normalized_counts)
    ''' % (r_count_data.r_repr(), r_col_data.r_repr()))

    # Results of differential expression analysis
    res_df = ro.r('res_data')

    # Normalization results
    normalized_counts_df = ro.r('normalized_counts_df')

res_df #Results of differential expression analysis

normalized_counts_df #RNA-seq Data Normalization Results

#Save Differential Expression Analysis Results File
#res_df.to_csv("/content/drive/MyDrive/Data_TA/Hasil_DEA_deseq2.csv", index=True)

#Save RNA-seq Data Normalization Result File
#normalized_counts_df.to_csv("/content/drive/MyDrive/Data_TA/_Hasil_Normalisasi_RNA.csv", index=True)